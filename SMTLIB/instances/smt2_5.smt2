(set-logic ALL)
(declare-fun distances () (Array Int (Array Int Int)))
(declare-fun s () (Array Int Int))
(declare-fun x_0_1 () Int)
(declare-fun x_0_2 () Int)
(declare-fun x_1_1 () Int)
(declare-fun x_1_2 () Int)
(declare-fun x_0_3 () Int)
(declare-fun x_0_0 () Int)
(declare-fun x_1_3 () Int)
(declare-fun x_1_0 () Int)
(declare-fun load_0 () Int)
(declare-fun load_1 () Int)
(declare-fun y_0 () Int)
(declare-fun y_1 () Int)
(declare-fun max_distance () Int)
(assert (= (select (select distances 0) 0) 0))
(assert (= (select (select distances 0) 1) 21))
(assert (= (select (select distances 0) 2) 86))
(assert (= (select (select distances 0) 3) 99))
(assert (= (select (select distances 1) 0) 21))
(assert (= (select (select distances 1) 1) 0))
(assert (= (select (select distances 1) 2) 71))
(assert (= (select (select distances 1) 3) 80))
(assert (= (select (select distances 2) 0) 92))
(assert (= (select (select distances 2) 1) 71))
(assert (= (select (select distances 2) 2) 0))
(assert (= (select (select distances 2) 3) 61))
(assert (= (select (select distances 3) 0) 59))
(assert (= (select (select distances 3) 1) 80))
(assert (= (select (select distances 3) 2) 61))
(assert (= (select (select distances 3) 3) 0))
(assert (= (select s 0) 20))
(assert (= (select s 1) 17))
(assert (= (select s 2) 6))
(assert (= (select s 3) 0))
(assert (and (>= x_0_1 0) (<= x_0_1 3)))
(assert (and (>= x_0_2 0) (<= x_0_2 3)))
(assert (and (>= x_1_1 0) (<= x_1_1 3)))
(assert (and (>= x_1_2 0) (<= x_1_2 3)))
(assert (and (= x_0_0 3) (= x_0_3 3)))
(assert (and (= x_1_0 3) (= x_1_3 3)))
(assert (= (+ (ite (= x_0_1 0) 1 0)
      (ite (= x_0_2 0) 1 0)
      (ite (= x_0_3 0) 1 0)
      (ite (= x_1_1 0) 1 0)
      (ite (= x_1_2 0) 1 0)
      (ite (= x_1_3 0) 1 0))
   1))
(assert (= (+ (ite (= x_0_1 1) 1 0)
      (ite (= x_0_2 1) 1 0)
      (ite (= x_0_3 1) 1 0)
      (ite (= x_1_1 1) 1 0)
      (ite (= x_1_2 1) 1 0)
      (ite (= x_1_3 1) 1 0))
   1))
(assert (= (+ (ite (= x_0_1 2) 1 0)
      (ite (= x_0_2 2) 1 0)
      (ite (= x_0_3 2) 1 0)
      (ite (= x_1_1 2) 1 0)
      (ite (= x_1_2 2) 1 0)
      (ite (= x_1_3 2) 1 0))
   1))
(assert (= load_0 (+ (select s x_0_1) (select s x_0_2))))
(assert (<= load_0 18))
(assert (= load_1 (+ (select s x_1_1) (select s x_1_2))))
(assert (<= load_1 30))
(assert (and (<= 6 load_0) (>= 30 load_0)))
(assert (and (<= 6 load_1) (>= 30 load_1)))
(assert (=> (= x_0_1 3) (= x_0_2 3)))
(assert (=> (= x_0_2 3) (= x_0_3 3)))
(assert (=> (= x_1_1 3) (= x_1_2 3)))
(assert (=> (= x_1_2 3) (= x_1_3 3)))
(assert (=> false
    (<= (ite (distinct x_0_1 3) x_0_1 (- 1))
        (ite (distinct x_0_1 3) x_0_1 (- 1)))))
(assert (=> true (<= load_0 load_1)))
(assert (= y_0
   (+ (select (select distances x_0_0) x_0_1)
      (select (select distances x_0_1) x_0_2)
      (select (select distances x_0_2) x_0_3))))
(assert (= y_1
   (+ (select (select distances x_1_0) x_1_1)
      (select (select distances x_1_1) x_1_2)
      (select (select distances x_1_2) x_1_3))))
(assert (and (<= 118 y_0) (>= 351 y_0)))
(assert (and (<= 118 y_1) (>= 351 y_1)))
(assert (= max_distance (ite (> y_1 y_0) y_1 y_0)))
(assert (<= 160 max_distance))

(assert (<= max_distance 206))
(assert (>= max_distance 206))
(check-sat)
(get-value (x_0_0))
(get-value (x_0_1))
(get-value (x_0_2))
(get-value (x_0_3))
(get-value (x_1_0))
(get-value (x_1_1))
(get-value (x_1_2))
(get-value (x_1_3))